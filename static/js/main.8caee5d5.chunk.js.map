{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions .js","components/Section/Section.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css"],"names":["Statistics","props","ID","shortid","generate","feedbackMarckUp","feedbacks","map","feedback","className","style","StatisticsItem","id","Positivefeedback","StatisticsList","FeedbackOptions","BtnText","styles","statisticsItem","statisticsText","onClick","statisticsList","prototype","goodIncrement","PropTypes","node","neutralIncrement","badIncrement","arrayOf","string","Section","title","children","SectionTitle","App","state","good","neutral","bad","e","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","total","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8caee5d5.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from './Statistics.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid'\r\nconst Statistics = (props) => {\r\n    const ID = () => shortid.generate()\r\n    const feedbackMarckUp = props.feedbacks.map((feedback) => {\r\n        if (feedback === 'Positivefeedback') {\r\n            return <li className={style.StatisticsItem} id={ID()}><p>Positive feedback : {props.Positivefeedback+'%'}</p></li>\r\n        }\r\n        return(<li id={ID()}><p  id={ID()}>{feedback} : {props[feedback]}</p></li>)\r\n    })\r\n    return (\r\n        <ul className ={style.StatisticsList}>\r\n            {feedbackMarckUp}\r\n        </ul>)\r\n}\r\n\r\n\r\nStatistics.propTypes  = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positiveFeedbackPercentage: PropTypes.number,\r\n    feedback:PropTypes.arrayOf(PropTypes.string),\r\n}\r\nexport default Statistics","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css'\r\nimport shortid from 'shortid'\r\n\r\n\r\nconst FeedbackOptions = (props) => {\r\n    const ID = () => shortid.generate()\r\n    const BtnText = props.feedbacks.map((feedback) => {\r\n        return <li id={ID()} className={styles.statisticsItem}><button className={styles.statisticsText} onClick={props[feedback]}>{feedback}</button></li>\r\n    })\r\n    return (\r\n        <ul  className={styles.statisticsList}>\r\n            {BtnText}\r\n        </ul>)\r\n}\r\n\r\nFeedbackOptions.prototype = {\r\n    goodIncrement: PropTypes.node,\r\n    neutralIncrement: PropTypes.node,\r\n    badIncrement: PropTypes.node,\r\n    feedbacks:PropTypes.arrayOf(PropTypes.string)\r\n}\r\nexport default FeedbackOptions;","import React from 'react'\r\nimport styles from './Section.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({title ,children }) => (\r\n    <section className={styles.Section}>\r\n        <h2 className={styles.SectionTitle}>{title}</h2>\r\n         {children }\r\n    </section>\r\n)\r\nSection.prototype = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node\r\n}\r\nexport default Section;","import './App.css';\nimport React, { Component } from 'react'\nimport Statistics from './components/Statistics/Statistics.js'\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions '\nimport Section from './components/Section/Section'\nclass App extends Component {\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n  }\n  goodIncrement = (e) => {\n    this.setState((prevState) => {\n      return {\n        good : prevState.good + 1\n      }\n    })\n  }\n  neutralIncrement = (e) => {\n    this.setState((prevState) => {\n      return {\n        neutral : prevState.neutral + 1\n      }\n    })\n  }\n  badIncrement = (e) => {\n    this.setState((prevState) => {\n      return {\n        bad : prevState.bad + 1\n      }\n    })\n  }\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad\n  }\n  countPositiveFeedbackPercentage = () => {\n   return   Math.round(this.state.good/(this.countTotalFeedback()/100))\n  }\n  render() {\n    return (\n      <div>\n        <Section title = 'Please leave feedback'>\n          <FeedbackOptions good={this.goodIncrement} neutral={this.neutralIncrement} bad={this.badIncrement} feedbacks ={['good','neutral','bad'] }/>\n        </Section>\n        <Section title='Statistic'  >\n            {this.countTotalFeedback() === 0?<h3>no feedback given</h3>:<Statistics feedbacks ={['good','neutral','bad','total','Positivefeedback']} good={this.state.good} neutral={this.state.neutral} bad = {this.state.bad} total = {this.countTotalFeedback()} Positivefeedback = {this.countPositiveFeedbackPercentage()} />}\n        </Section>\n      </div>\n\n    )\n  }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"FeedbackOptions_statisticsList__2Uq81\",\"statisticsItem\":\"FeedbackOptions_statisticsItem__2Hb-E\",\"statisticsText\":\"FeedbackOptions_statisticsText__BomDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsList\":\"Statistics_StatisticsList__1d4Or\",\"StatisticsItem\":\"Statistics_StatisticsItem__3S6yK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__3ztcd\",\"SectionTitle\":\"Section_SectionTitle__1s0-Y\"};"],"sourceRoot":""}